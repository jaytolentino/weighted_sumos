"""
Autogenerated input type of AddImmigrationDetails
"""
input AddImmigrationDetailsInput {
  arrivalYear: Int!
  citizenshipCountryCode: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  goalStatusId: ID!
}

"""
Autogenerated return type of AddImmigrationDetails
"""
type AddImmigrationDetailsPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [UserError!]
  success: Boolean
}

"""
Autogenerated input type of AddOnboardingDetails
"""
input AddOnboardingDetailsInput {
  citizenshipCountryCode: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  firstName: String!
  lastName: String!
  middleNames: String
}

"""
Autogenerated return type of AddOnboardingDetails
"""
type AddOnboardingDetailsPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [UserError!]
  success: Boolean
  user: User
}

"""
Autogenerated input type of AddStatuses
"""
input AddStatusesInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  statuses: [RoadmapStatusInput!]!
}

"""
Autogenerated return type of AddStatuses
"""
type AddStatusesPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [UserError!]
  success: Boolean
}

enum AssigneeEnum {
  """
  dso
  """
  dso

  """
  employer
  """
  employer

  """
  gov
  """
  gov

  """
  immigrant
  """
  immigrant
}

type BlueprintChecklist {
  goalStatus: BlueprintStatus
  id: ID!
  name: String!
  premiumOnly: Boolean!
}

type BlueprintStatus {
  countryCode: String!
  description: String
  evidenceType: EvidenceTypeEnum!
  id: ID!
  name: String
  statusType: StatusTypeEnum!
}

"""
Autogenerated input type of CompleteChecklist
"""
input CompleteChecklistInput {
  checklistId: ID!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CompleteChecklist
"""
type CompleteChecklistPayload {
  checklist: RoadmapChecklist

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [UserError!]
  success: Boolean
}

"""
Autogenerated input type of ConfirmEmail
"""
input ConfirmEmailInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  token: String!
}

"""
Autogenerated return type of ConfirmEmail
"""
type ConfirmEmailPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [UserError!]
  success: Boolean
}

"""
Autogenerated input type of CreateChecklist
"""
input CreateChecklistInput {
  blueprintChecklistId: ID!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateChecklist
"""
type CreateChecklistPayload {
  checklist: RoadmapChecklist

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [UserError!]
  success: Boolean
}

type Dashboard {
  missingName: Boolean!
  missingTimelineDetails: Boolean!
  missingVisaHistory: Boolean!
  timeline: Timeline!
  unreadNotificationCount: Int!
}

enum DataTypeEnum {
  """
  h1b
  """
  h1b

  """
  lca
  """
  lca

  """
  other
  """
  other

  """
  perm
  """
  perm
}

enum EvidenceTypeEnum {
  """
  birth_cert
  """
  birth_cert

  """
  other
  """
  other

  """
  passport
  """
  passport

  """
  unknown
  """
  unknown

  """
  visa
  """
  visa
}

"""
An ISO 8601-encoded date
"""
scalar ISO8601Date

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime

"""
Autogenerated input type of LoginUser
"""
input LoginUserInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  email: String!
  password: String!
}

"""
Autogenerated return type of LoginUser
"""
type LoginUserPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [UserError!]
  success: Boolean
  token: String
  user: User
}

"""
Autogenerated input type of LogoutUser
"""
input LogoutUserInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  email: String!
}

"""
Autogenerated return type of LogoutUser
"""
type LogoutUserPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [UserError!]
  success: Boolean
}

enum MembershipTypeEnum {
  """
  premium_monthly
  """
  premium_monthly

  """
  premium_yearly
  """
  premium_yearly

  """
  standard
  """
  standard
}

type Mutation {
  addImmigrationDetails(
    """
    Parameters for AddImmigrationDetails
    """
    input: AddImmigrationDetailsInput!
  ): AddImmigrationDetailsPayload
  addOnboardingDetails(
    """
    Parameters for AddOnboardingDetails
    """
    input: AddOnboardingDetailsInput!
  ): AddOnboardingDetailsPayload
  addStatuses(
    """
    Parameters for AddStatuses
    """
    input: AddStatusesInput!
  ): AddStatusesPayload
  completeChecklist(
    """
    Parameters for CompleteChecklist
    """
    input: CompleteChecklistInput!
  ): CompleteChecklistPayload
  confirmEmail(
    """
    Parameters for ConfirmEmail
    """
    input: ConfirmEmailInput!
  ): ConfirmEmailPayload
  createChecklist(
    """
    Parameters for CreateChecklist
    """
    input: CreateChecklistInput!
  ): CreateChecklistPayload
  loginUser(
    """
    Parameters for LoginUser
    """
    input: LoginUserInput!
  ): LoginUserPayload
  logoutUser(
    """
    Parameters for LogoutUser
    """
    input: LogoutUserInput!
  ): LogoutUserPayload
  readNotification(
    """
    Parameters for ReadNotification
    """
    input: ReadNotificationInput!
  ): ReadNotificationPayload
  registerUser(
    """
    Parameters for RegisterUser
    """
    input: RegisterUserInput!
  ): RegisterUserPayload
  removeChecklist(
    """
    Parameters for RemoveChecklist
    """
    input: RemoveChecklistInput!
  ): RemoveChecklistPayload
  removeDocument(
    """
    Parameters for RemoveDocument
    """
    input: RemoveDocumentInput!
  ): RemoveDocumentPayload
  setNotificationSettings(
    """
    Parameters for SetNotificationSettings
    """
    input: SetNotificationSettingsInput!
  ): SetNotificationSettingsPayload
  signupForBeta(
    """
    Parameters for SignupForBeta
    """
    input: SignupForBetaInput!
  ): SignupForBetaPayload
  toggleChecklistItem(
    """
    Parameters for ToggleChecklistItem
    """
    input: ToggleChecklistItemInput!
  ): ToggleChecklistItemPayload
  updateChecklistItem(
    """
    Parameters for UpdateChecklistItem
    """
    input: UpdateChecklistItemInput!
  ): UpdateChecklistItemPayload
  updateUserProfile(
    """
    Parameters for UpdateUserProfile
    """
    input: UpdateUserProfileInput!
  ): UpdateUserProfilePayload
  uploadUsDolData(
    """
    Parameters for UploadUsDolData
    """
    input: UploadUsDolDataInput!
  ): UploadUsDolDataPayload
}

enum QuarterEnum {
  """
  q1
  """
  q1

  """
  q2
  """
  q2

  """
  q3
  """
  q3

  """
  q4
  """
  q4
}

type Query {
  dashboard: Dashboard!
  possibleChecklists: [BlueprintChecklist!]!
  possibleStatuses: [BlueprintStatus!]!
  roadmapChecklist(checklistId: ID!): RoadmapChecklist
  roadmapChecklistItem(checklistItemId: ID!): RoadmapChecklistItem
  roadmapChecklistViaSlug(slug: String!): RoadmapChecklist
  unreadNotificationCount: Int!
  userContext: UserContext
  userDocuments: [UserDocument!]!
  userNotifications: [UserNotification!]!
}

"""
Autogenerated input type of ReadNotification
"""
input ReadNotificationInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  userNotificationId: ID!
}

"""
Autogenerated return type of ReadNotification
"""
type ReadNotificationPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [UserError!]
  success: Boolean
}

"""
Autogenerated input type of RegisterUser
"""
input RegisterUserInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  email: String!
  password: String!
}

"""
Autogenerated return type of RegisterUser
"""
type RegisterUserPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [UserError!]
  success: Boolean
  token: String
  user: User
}

"""
Autogenerated input type of RemoveChecklist
"""
input RemoveChecklistInput {
  checklistId: ID!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of RemoveChecklist
"""
type RemoveChecklistPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [UserError!]
  success: Boolean
}

"""
Autogenerated input type of RemoveDocument
"""
input RemoveDocumentInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  userDocumentId: ID!
}

"""
Autogenerated return type of RemoveDocument
"""
type RemoveDocumentPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [UserError!]
  success: Boolean
}

type RoadmapChecklist {
  canBeCompleted: Boolean!
  completedAt: ISO8601DateTime
  description: String
  documentCount: Int!
  goalStatus: BlueprintStatus
  id: ID!
  isHidden: Boolean!
  isStatusRenewal: Boolean!
  itemCompletedCount: Int!
  itemTotalCount: Int!
  name: String!
  orderedItems: [RoadmapOrderedItem!]!
  percentComplete: Float!
  premiumOnly: Boolean!
  slug: String!
  timelineDates: [RoadmapTimelineDate!]!
  uscisUrl: String
}

type RoadmapChecklistItem {
  assignee: AssigneeEnum
  canHaveDate: Boolean
  canHaveDocument: Boolean
  checklistName: String!
  checklistSlug: String!
  completedAt: ISO8601DateTime
  date: ISO8601Date
  dateDetailName: String
  description: String
  documentDetailName: String
  documentId: ID
  documentName: String
  documentUrl: String
  hasDeadlinePassed: Boolean!
  id: ID!
  isDeadlineSoon: Boolean!
  name: String!
  needsDetail: Boolean
  order: Int!
  suggestedDeadline: ISO8601Date
  uscisUrl: String
}

type RoadmapChecklistOverview {
  completedAt: ISO8601DateTime
  documentCount: Int!
  id: ID!
  itemCompletedCount: Int!
  itemTotalCount: Int!
  name: String!
  nextItems: [RoadmapChecklistItem!]!
  percentComplete: Float!
  premiumOnly: Boolean!
  slug: String!
}

type RoadmapItemGroup {
  description: String
  id: ID!
  name: String!
  order: Int!
  uscisUrl: String
}

"""
Ordered items to be displayed on a checklist. This can be either a checklist item or an item grouping.
"""
union RoadmapOrderedItem = RoadmapChecklistItem | RoadmapItemGroup

type RoadmapStatus {
  countryCode: String!
  endsAt: ISO8601Date
  evidenceType: EvidenceTypeEnum!
  id: ID!
  name: String!
  startsAt: ISO8601Date
  statusType: StatusTypeEnum!
}

input RoadmapStatusInput {
  blueprintStatusId: ID!
  endsAt: ISO8601Date
  startsAt: ISO8601Date
}

type RoadmapTimelineDate {
  date: ISO8601Date!
  name: String!
}

"""
Autogenerated input type of SetNotificationSettings
"""
input SetNotificationSettingsInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  emailSubscribed: Boolean!
  pushSubscribed: Boolean!
}

"""
Autogenerated return type of SetNotificationSettings
"""
type SetNotificationSettingsPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [UserError!]
  success: Boolean
  user: User!
}

"""
Autogenerated input type of SignupForBeta
"""
input SignupForBetaInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  destinationCountryCode: String
  email: String!
  firstName: String!
  lastName: String!
  originCountryCode: String
}

"""
Autogenerated return type of SignupForBeta
"""
type SignupForBetaPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [UserError!]
  success: Boolean
}

enum StatusTypeEnum {
  """
  citizen
  """
  citizen

  """
  none
  """
  none

  """
  perm_res
  """
  perm_res

  """
  student
  """
  student

  """
  temp_visitor
  """
  temp_visitor

  """
  temp_worker
  """
  temp_worker
}

type Timeline {
  checklistOverviews: [RoadmapChecklistOverview!]!
  goalStatus: BlueprintStatus
  id: ID!
  statuses: [RoadmapStatus!]!
  timelineDates: [RoadmapTimelineDate!]!
}

"""
Autogenerated input type of ToggleChecklistItem
"""
input ToggleChecklistItemInput {
  checklistItemId: ID!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  isComplete: Boolean!
}

"""
Autogenerated return type of ToggleChecklistItem
"""
type ToggleChecklistItemPayload {
  checklistItem: RoadmapChecklistItem

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [UserError!]
  success: Boolean
}

"""
Autogenerated input type of UpdateChecklistItem
"""
input UpdateChecklistItemInput {
  checklistItemId: ID!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  date: ISO8601Date
  document: Upload
}

"""
Autogenerated return type of UpdateChecklistItem
"""
type UpdateChecklistItemPayload {
  checklistItem: RoadmapChecklistItem

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [UserError!]
  success: Boolean
}

"""
Autogenerated input type of UpdateUserProfile
"""
input UpdateUserProfileInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  firstName: String
  lastName: String
  middleNames: String
}

"""
Autogenerated return type of UpdateUserProfile
"""
type UpdateUserProfilePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [UserError!]
  success: Boolean
}

scalar Upload

"""
Autogenerated input type of UploadUsDolData
"""
input UploadUsDolDataInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  dataType: DataTypeEnum!
  file: Upload!
  fiscalYear: Int!
  quarter: QuarterEnum
}

"""
Autogenerated return type of UploadUsDolData
"""
type UploadUsDolDataPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [UserError!]
  success: Boolean
}

type User {
  email: String!
  emailSubscribed: Boolean!
  firstName: String
  id: ID!
  inviteCode: String!
  isAdmin: Boolean!
  isMembershipValid: Boolean!
  lastName: String
  membershipType: MembershipTypeEnum!
  middleNames: String
  needsConfirmation: Boolean!
  pushSubscribed: Boolean!
  userCountFromInvites: Int!
}

type UserContext {
  currentUser: User
  viewedUser: User
}

type UserDocument {
  checklistItems: [RoadmapChecklistItem!]!
  createdAt: ISO8601DateTime!
  fileUrl: String!
  filename: String!
  id: ID!
}

"""
A user-readable error
"""
type UserError {
  """
  A description of the error
  """
  message: String!

  """
  Which input value this error came from
  """
  path: [String!]
}

type UserNotification {
  action: UserNotificationActionEnum!
  body: String!
  createdAt: ISO8601DateTime!
  id: ID!
  isRead: Boolean!
  title: String!
  url: String
}

enum UserNotificationActionEnum {
  """
  dashboard
  """
  dashboard

  """
  no_action
  """
  no_action
}
